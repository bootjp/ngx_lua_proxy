worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    init_by_lua '
      cache_server = os.getenv("CACHE_SERVER");
    ';
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /hellolua {
            content_by_lua '
                ngx.header["Content-Type"] = "text/plain";
                ngx.say("hello world");
            ';
        }

        location /image {
            content_by_lua '
                local request_url = "";
                local args = ngx.req.get_uri_args()
                    for key, val in pairs(args) do
                        if key == "url" then
                            request_url = val
                        end
                    end
                ngx.header["Content-Type"] = "text/plain";
                ngx.say(request_url);
                ngx.say(cache_server);
             ';
             # @todo create proxy request
             # res = ngx.location.capture("/get_cache", { share_all_vars = true });
             # https://github.com/openresty/lua-nginx-module#ngxreqget_uri_args
        }

        location = /get_cache {
             internal;
             proxy_pass '';
         }


        error_page 500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
